// <auto-generated />
using System;
using DataAccess.UnitOfWork;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccess.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20200329201105_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DataAccess.EntityModels.DeliveryOrderModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DeliveryPlaceId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelivering")
                        .HasColumnType("bit");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("TimeToReady")
                        .HasColumnType("time");

                    b.Property<int?>("TransportId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("TransportReturnTime")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("DeliveryPlaceId");

                    b.HasIndex("ProductId");

                    b.HasIndex("TransportId");

                    b.ToTable("DeliveryOrderModels");
                });

            modelBuilder.Entity("DataAccess.EntityModels.DeliveryPlaceModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("DistanceToShop")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DeliveryPlaceModels");
                });

            modelBuilder.Entity("DataAccess.EntityModels.PriorityModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PriorityNumber")
                        .HasColumnType("int");

                    b.Property<int>("ProductModelId")
                        .HasColumnType("int");

                    b.Property<int>("TransportModelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductModelId");

                    b.HasIndex("TransportModelId");

                    b.ToTable("PriorityModels");
                });

            modelBuilder.Entity("DataAccess.EntityModels.ProductModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProductModels");
                });

            modelBuilder.Entity("DataAccess.EntityModels.TransportModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsBusy")
                        .HasColumnType("bit");

                    b.Property<bool>("JamImpact")
                        .HasColumnType("bit");

                    b.Property<int>("MaxSize")
                        .HasColumnType("int");

                    b.Property<int>("MaxWeight")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductModelId")
                        .HasColumnType("int");

                    b.Property<double>("Speed")
                        .HasColumnType("float");

                    b.Property<TimeSpan>("TimeReturnToShop")
                        .HasColumnType("time");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductModelId");

                    b.ToTable("TransportModels");
                });

            modelBuilder.Entity("DataAccess.EntityModels.WaitingOrderModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DeliveryPlaceId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelivering")
                        .HasColumnType("bit");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("TimeToReady")
                        .HasColumnType("time");

                    b.Property<int?>("TransportId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("TransportReturnTime")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("DeliveryPlaceId");

                    b.HasIndex("ProductId");

                    b.HasIndex("TransportId");

                    b.ToTable("WaitingOrderModel");
                });

            modelBuilder.Entity("DataAccess.EntityModels.DeliveryOrderModel", b =>
                {
                    b.HasOne("DataAccess.EntityModels.DeliveryPlaceModel", "DeliveryPlace")
                        .WithMany()
                        .HasForeignKey("DeliveryPlaceId");

                    b.HasOne("DataAccess.EntityModels.ProductModel", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.HasOne("DataAccess.EntityModels.TransportModel", "Transport")
                        .WithMany()
                        .HasForeignKey("TransportId");
                });

            modelBuilder.Entity("DataAccess.EntityModels.PriorityModel", b =>
                {
                    b.HasOne("DataAccess.EntityModels.ProductModel", "ProductModel")
                        .WithMany()
                        .HasForeignKey("ProductModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.EntityModels.TransportModel", "TransportModel")
                        .WithMany()
                        .HasForeignKey("TransportModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataAccess.EntityModels.TransportModel", b =>
                {
                    b.HasOne("DataAccess.EntityModels.ProductModel", null)
                        .WithMany("availableTransport")
                        .HasForeignKey("ProductModelId");
                });

            modelBuilder.Entity("DataAccess.EntityModels.WaitingOrderModel", b =>
                {
                    b.HasOne("DataAccess.EntityModels.DeliveryPlaceModel", "DeliveryPlace")
                        .WithMany()
                        .HasForeignKey("DeliveryPlaceId");

                    b.HasOne("DataAccess.EntityModels.ProductModel", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.HasOne("DataAccess.EntityModels.TransportModel", "Transport")
                        .WithMany()
                        .HasForeignKey("TransportId");
                });
#pragma warning restore 612, 618
        }
    }
}
